openapi: 3.0.3
info:
  title: Digital Learning Resources Management API
  version: 1.0.0
  description: This project aims to provide an API managment for digital resources.
    One can create, read(retrieve), update, or delete a resource. You will have a
    place to write your notes as you go through the material and either mark it as
    important for future reference
paths:
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/users/user-profile/:
    get:
      operationId: users_user_profile_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '404':
          content:
            application/json:
              schema:
                error: Profile not found.
          description: ''
  /api/users/user-profile/delete/:
    delete:
      operationId: users_user_profile_delete_destroy
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                message: Profile successfully deleted
          description: ''
        '404':
          content:
            application/json:
              schema:
                error: Profile not found.
          description: ''
  /api/users/user-profile/update/:
    put:
      operationId: users_user_profile_update_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '400':
          content:
            application/json:
              schema:
                error: Invalid request data
          description: ''
        '404':
          content:
            application/json:
              schema:
                error: Profile not found.
          description: ''
components:
  schemas:
    CustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - id
    Profile:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        bio:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        profile_picture:
          type: string
          format: uri
          nullable: true
      required:
      - user
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
