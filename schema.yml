openapi: 3.0.3
info:
  title: Digital Learning Resources Management API
  version: 1.0.0
  description: This project aims to provide an API managment for digital resources.
    One can create, read(retrieve), update, or delete a resource. You will have a
    place to write your notes as you go through the material and either mark it as
    important for future reference
paths:
  /api/auth/google/:
    post:
      operationId: auth_google_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                access: string
                refresh: string
                message: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                error: Invalid request data
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      requestBody:
        content:
          refresh:
            schema:
              type: string
              description: Refresh token
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                message:
                  type: string
                  description: Logout message
          description: ''
        '400':
          content:
            application/json:
              schema:
                message:
                  type: string
                  description: Error message
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                message: User registered successfully. Please verify your email address.
          description: ''
        '400':
          content:
            application/json:
              schema:
                error: Invalid request data
          description: ''
  /api/users/user-profile/:
    get:
      operationId: users_user_profile_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '404':
          content:
            application/json:
              schema:
                error: Profile not found.
          description: ''
  /api/users/user-profile/delete/:
    delete:
      operationId: users_user_profile_delete_destroy
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                message: Profile successfully deleted
          description: ''
        '404':
          content:
            application/json:
              schema:
                error: Profile not found.
          description: ''
  /api/users/user-profile/update/:
    put:
      operationId: users_user_profile_update_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '400':
          content:
            application/json:
              schema:
                error: Invalid request data
          description: ''
        '404':
          content:
            application/json:
              schema:
                error: Profile not found.
          description: ''
components:
  schemas:
    CustomLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    CustomUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - id
      - username
    Profile:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        bio:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        profile_picture:
          type: string
          format: uri
          nullable: true
      required:
      - user
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password
      - password2
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
